<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>y119777.github.io</title><link>https://y119777.github.io/</link><description></description><lastBuildDate>Sat, 13 Aug 2016 22:19:27 +0800</lastBuildDate><item><title>8-13-不知道些什么</title><link>https://y119777.github.io/8-13-bu-zhi-dao-xie-shi-yao.html</link><description>&lt;h2 id="_1"&gt;没有梦想跟咸鱼有什么区别&lt;/h2&gt;
&lt;h2 id="_2"&gt;有梦想谁都了不起&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[] 今天的周报还没交呢！&lt;/li&gt;
&lt;li&gt;[x] 那今天交什么了呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每天不知道写些什么东西，感觉还是抓住时间多做一些题吧！要是把做的每道题都写上来，那就太浪费时间了。那就把不会做的，或者有点心得体会的题贴上来吧！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;感觉还是不想写啊！怎么这么烦！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/y119777/pelican_blog/master/images/8-13.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Sat, 13 Aug 2016 22:19:27 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-13:8-13-bu-zhi-dao-xie-shi-yao.html</guid></item><item><title>8-12总结</title><link>https://y119777.github.io/8-12zong-jie.html</link><description>&lt;h2 id="_1"&gt;随便写写&lt;/h2&gt;
&lt;h3 id="2016812130047"&gt;2016年8月12日13:00:47&lt;/h3&gt;
&lt;p&gt;好几天没写了，赶紧补一下。上次总结是8月9号，前天，昨天都没写。&lt;br /&gt;
按照惯例，开始写。&lt;/p&gt;
&lt;p&gt;这几天完成的题目如下：&lt;br /&gt;
1. Guess Number Higher or Lower II&lt;br /&gt;
2. Guess Number Higher or Lower&lt;br /&gt;
3. Find K Pairs with Smallest Sums&lt;/p&gt;
&lt;p&gt;就这集体吧，其他的不写了。 第二题和第三题很简单， 第二题简单二分，第三题跟上次的那个题， 计算sorted matrix kth smallest的相似，只不过矩阵需要重新计算，这题还有个问题，就是卡的比较严，比如一个数组是空的时候，也要输出， 所有数据组合数可能小于k，反正考虑的情况比较多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一题没有做出来，查的答案，先写一下，当初是怎么思考的，刚开始是以为简单的二分，然后步行，接着看到tag是dp，然后就往dp上面靠拢，刚开始我以为计算（a, b）之间的最小代价为（1, b - a + 1）然后再加上次数乘以（a - 1）,但是，运行之后发现错误的，是因为次数乘以因子的大小无法控制， （a, b）的最小代价计算不是这样计算，需要采用单独枚举,然后就开始查答案了。&lt;/p&gt;
&lt;p&gt;看答案之后，一看，啊，是这样，当你上面的方法错误的时候， 就只能每个区间单独计算，所以不断枚举所有区间，利用计算出来的小区间，在区间长度时间内计算出来，最后返回所有区间的结果即可。这种形式的dp之前也遇到过，但也没总结，只是知道这种新式。&lt;/p&gt;
&lt;p&gt;感觉遇到题，还是分析不出贪心性质和最优子结构性质，不知道怎么利用贪心和动态规划的算法，只是知道是什么，但不知道怎么使用，这很麻烦，需要多分析题的性质， 还是对这2种算法的思想理解不透彻。多加思考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="_2"&gt;计划&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;leetcode至少要刷完一遍。&lt;/li&gt;
&lt;li&gt;做完usaco&lt;/li&gt;
&lt;li&gt;看完入门那本书&lt;/li&gt;
&lt;li&gt;去github上面参加开源项目，但我感觉都不会，也不知道参加哪个，怎么入手，好像有点困难。&lt;/li&gt;
&lt;li&gt;每天早上坚持看英语，主要是听力水平要提高。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;还有什么，以后有时间，再不上来吧！&lt;/p&gt;
&lt;p&gt;2016年8月12日13:20:59&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Fri, 12 Aug 2016 13:00:05 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-12:8-12zong-jie.html</guid></item><item><title>图片测试</title><link>https://y119777.github.io/tu-pian-ce-shi.html</link><description>&lt;h2 id="_1"&gt;自古深情留不住，总是套路得人心&lt;/h2&gt;
&lt;p&gt;&lt;img alt="test" src="https://raw.githubusercontent.com/smshen/MarkdownPhotos/master/Res/test.jpg" /&gt;&lt;br /&gt;
&lt;img alt="test1.jpeg" src="https://ooo.0o0.ooo/2016/08/10/57abcc86ef753.jpeg" /&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt;本地图片&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/y119777/pelican_blog/master/images/test1.jpeg" /&gt;&lt;br /&gt;
&lt;img alt="" src="https://raw.githubusercontent.com/y119777/pelican_blog/master/images/test2.jpg" /&gt;&lt;br /&gt;
&lt;img alt="" src="https://raw.githubusercontent.com/y119777/pelican_blog/master/images/QQ%E5%9B%BE%E7%89%8720160811113544.png" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Wed, 10 Aug 2016 22:56:00 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-10:tu-pian-ce-shi.html</guid></item><item><title>8-9-总结</title><link>https://y119777.github.io/8-9-zong-jie.html</link><description>&lt;h3 id="_1"&gt;七夕节，要什么女朋友，还是专心做题吧！（我也知道这是在骗自己，但是目前确实没有女朋友啊！）&lt;/h3&gt;
&lt;p&gt;今天终于动手开始做题了，沉寂了这么多天，每天想着做题，但是却没静下心来做题，一致在忙怎么搭博客的事情，搭好了，那就赶紧开始做吧！&lt;/p&gt;
&lt;p&gt;今天做的题目如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kth Smallest Element in a Sorted Matrix&lt;/li&gt;
&lt;li&gt;Combination Sum IV&lt;/li&gt;
&lt;li&gt;Combination Sum&lt;/li&gt;
&lt;li&gt;Combinations&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本上都是搜索的题目，第一题之前做过查找的我记得是从右上角或者左下角开始二分查找，这次不知道怎么做，朴素的做法就是全部放入vector排序，但是这太笨，没有利用有序的性质，还是查答案了，就是维护大小为n的最小堆，然后找第k个数，注意边界条件。&lt;/p&gt;
&lt;p&gt;第二题，感觉很熟练，但是没做出来，考虑有序的计数，可以用普通的搜索的方法找出没序的情况，然后排列组合的办法求出总数，但是事实总是证明，这种方法是错误的，此路不通，考虑知道dp可以来计数，但没仔细思考，因为之前不知道一个组合的各种排列计数，就没想，查答案，就是计数，一般的，n作为一位，然后便利每一个数，统计，最后输出dp[n]，OK。&lt;/p&gt;
&lt;p&gt;第三题第一眼我还以为是计数，原来是求所有的组合情况，然后就用普通的搜索写法，我感觉我的这种的写法，在不知道数据范围的情况下，在leetcode的情况下，写法很丑，明天查一下怎么正确写。&lt;/p&gt;
&lt;p&gt;第四题就是第三题缩小版，普通的搜索，记录，深搜，还原，基本上就是这样的套路。&lt;/p&gt;
&lt;h2 id="_2"&gt;总结&lt;/h2&gt;
&lt;p&gt;还是多多联系搜索的写法，如果不知道其他写法，那就搜索，再加上一些heuristic的剪枝， apac就有这样的提。&lt;/p&gt;
&lt;p&gt;还有就是&lt;strong&gt;多练，多做，多见识，多思考，才能提高&lt;/strong&gt;，空想是不行的。&lt;br /&gt;
加油！这也算是每天的乐趣吧！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Tue, 09 Aug 2016 22:35:34 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-09:8-9-zong-jie.html</guid><category>leetcode</category></item><item><title>新学期，新气象~</title><link>https://y119777.github.io/build-blog-system-by-pelican.html</link><description>&lt;h2 id="_1"&gt;计划，安排&lt;/h2&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;高温假结束（什么？还有高温假！），这算是新的学期开始吧！好好规划一下，这学期的计划，包括半年的，每月的，半月的以及每周的。当然首要的任务先是完成实验室的任务，然后再是自己的。&lt;/p&gt;
&lt;h3 id="_2"&gt;大概如下：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;做题，我感觉每天至少得写一些代码，至少得做一道题吧！&lt;/li&gt;
&lt;li&gt;每天写总结，如果没什么写的，就来这里灌水吧，或者写一些想法吧。&lt;/li&gt;
&lt;li&gt;赶紧找个&lt;strong&gt;女朋友&lt;/strong&gt;！！！&lt;/li&gt;
&lt;li&gt;这学期的时间比较紧张，好好规划，做一些有意义的事情。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;就这样吧，还有什么问题，再说吧！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Mon, 08 Aug 2016 15:13:00 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-08:build-blog-system-by-pelican.html</guid><category>diary</category></item><item><title>About</title><link>https://y119777.github.io/about.html</link><description>&lt;h2 id="_1"&gt;贵在持之以恒！&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Sun, 07 Aug 2016 16:13:00 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-07:about.html</guid></item><item><title>HelloWorld</title><link>https://y119777.github.io/helloworld.html</link><description>&lt;div class="codehilite" style="background: #f8f8f8"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span style="color: #008800"&gt;#include&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #AA22FF; font-weight: bold"&gt;using&lt;/span&gt; &lt;span style="color: #AA22FF; font-weight: bold"&gt;namespace&lt;/span&gt; std;
&lt;span style="color: #00BB00; font-weight: bold"&gt;int&lt;/span&gt; &lt;span style="color: #00A000"&gt;main&lt;/span&gt;() {
    cout &lt;span style="color: #666666"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style="color: #BB4444"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt; &lt;span style="color: #666666"&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
    &lt;span style="color: #AA22FF; font-weight: bold"&gt;return&lt;/span&gt; &lt;span style="color: #666666"&gt;1&lt;/span&gt;;
}
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Sat, 06 Aug 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-06:helloworld.html</guid></item><item><title>test</title><link>https://y119777.github.io/test.html</link><description>&lt;h3 id="test"&gt;test&lt;/h3&gt;
&lt;p&gt;adadas&lt;br /&gt;
1. a&lt;br /&gt;
2. b&lt;br /&gt;
3. c&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuan</dc:creator><pubDate>Sat, 06 Aug 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:y119777.github.io,2016-08-06:test.html</guid></item></channel></rss>